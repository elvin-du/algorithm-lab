//剑指offer 矩阵覆盖
package algorithm_lab

//另一种DP问题。
//不需要完全覆盖。
/*
2*1的矩阵覆盖2*8的矩阵的方法f(8):用第一个1*2矩阵覆盖2*8矩阵的最左边时有竖着或横着两种方法。
当1*2矩阵竖着放时，2*8矩阵右边剩余2*7的区域，覆盖2*7区域的方法记为f(7);
当1*2矩阵横着放时，2*8左上角放一个1*2的矩阵，则2*8左下角必须放一个1*2的矩阵，2*8右边剩余2*6的区域，覆盖2*6区域的方法记为f(6)。
结论：用1*2的矩阵覆盖2*8的矩阵的方法归纳为f(8) = f(7)+f(6)
 */
func RectCover(n int) int {
	if n <= 0 {
		return 0
	}

	if n < 3 {
		return n
	}

	f1, f2 := 1, 2
	for i := 3; i < n; i++ {
		tmp := f2
		f2 = f1 + f2
		f1 = tmp
	}

	return f1 + f2
}
